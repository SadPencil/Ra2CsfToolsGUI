<?xml version="1.0" encoding="utf-8"?>

<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ui="http://schemas.modernwpf.com/2019" xmlns:local="clr-namespace:Ra2CsfToolsGUI" xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz" x:Class="Ra2CsfToolsGUI.MainWindow" ui:WindowHelper.UseModernWindowStyle="True" mc:Ignorable="d" Title="{Binding WindowTitle, Mode=OneWay}" Height="520" Width="800" AllowDrop="True" Drop="Window_Drop" ContentRendered="Window_Content_Rendered">
    <Window.Resources>
        <local:BooleanToVisibilityConverter  x:Key="BoolToVisConverter" />
        <local:BooleanToVisibilityConverter  x:Key="Not_BoolToVisConverter" True="Collapsed" False="Visible" />
    </Window.Resources>
    <TabControl>
        <TabItem Header="Home" x:Name="UI_HomeTabItem">
            <ui:TabItemHelper.Icon>
                <ui:SymbolIcon Symbol="Home" />
            </ui:TabItemHelper.Icon>

            <StackPanel>
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <!-- this column will be centre aligned -->
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                        <Label Margin="5" FontWeight="Light" FontSize="36" Content="{Binding ApplicationName, Mode=OneWay}" />
                        <Label Margin="5" VerticalAlignment="Bottom" FontWeight="Light" FontSize="24" Content="{Binding Version, Mode=OneWay}" />
                    </StackPanel>
                </Grid>

                <TextBlock Margin="10,10,10,0" FontSize="16" TextWrapping="Wrap">
                    This tool helps users process string table files (.csf) that are recognized by Red Alert 2 and Yuri's Revenge. It allows you to:
                    <LineBreak />
                    <ui:SymbolIcon Symbol="Accept" />
                    Edit the .csf file using your favorite text editor by converting it to an .ini file and then back to a .csf file.
                    <LineBreak />
                    <ui:SymbolIcon Symbol="Accept" />
                    You don't need to keep the .csf file. You can just store the .ini file in your Git repository, as it contains everything needed to generate a .csf file.
                </TextBlock>
                <TextBlock Margin="10,-15,10,10" FontSize="16" TextWrapping="Wrap" Visibility="{Binding Converter={StaticResource Not_BoolToVisConverter}, Path=AdvancedMode}">
                    <LineBreak/>
                    <ui:SymbolIcon Symbol="Accept"  />
                    More features available in "Advanced Mode"...
                </TextBlock>
                <TextBlock Margin="10,-15,10,10" FontSize="16" TextWrapping="Wrap" Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}"> 
                <LineBreak />
                    <ui:SymbolIcon Symbol="Accept"  />
                    Tile the translated file with the upstream file, so you can complete the translation without having to compare two files side by side.
                    <LineBreak />
                    <ui:SymbolIcon Symbol="Accept"/>
                    Highlight the translation updates between old and new versions of your old translation, so you can effectively update it.
                </TextBlock>

                <TextBlock Margin="10" FontSize="16" TextWrapping="Wrap">
                    <ui:SymbolIcon Symbol="Forward" />
                    To get started, simply drag &amp; drop a .csf/.ini file here.
                </TextBlock>
                <CheckBox Margin="10" FontSize="16" IsChecked="{Binding Path=AdvancedMode, Mode=TwoWay}">Advanced Mode</CheckBox>
            </StackPanel>
        </TabItem>
        <TabItem Header="Setting" Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}">
            <ui:TabItemHelper.Icon>
                <ui:SymbolIcon Symbol="Setting" />
            </ui:TabItemHelper.Icon>
            <ui:SimpleStackPanel Spacing="12" Margin="10">
                <GroupBox Header="Encoding 1252 Workaround Options">
                    <ui:SimpleStackPanel Spacing="12">
                        <TextBlock TextWrapping="Wrap" FontSize="16">
                            For code points 128-159 (0x80-0x9F), the original game.fnt file of RA2 mistakenly treats these characters as Windows-1252, instead of Unicode (ISO-8859-1).
                        In some mods and some editors, those characters may be saved as Windows-1252 encoding, which is incorrect.
                            <LineBreak />
                            However, users may still need to process these files. You can decide whether to treat 128-159 as Windows-1252 or as Unicode.
                            <LineBreak />
                            Checking the two boxes below means the former, which is compatible with some mods and some editors.
                            <LineBreak />
                            Un-checking the two boxes below means the latter. This is the correct way. The original game.fnt file has the correct font data at these code points, except for the trademark character ™.
                        </TextBlock>
                        <CheckBox FontSize="16" Content="Enable Windows-1252 workaround when loading the .csf file." IsChecked="{Binding Encoding1252ReadWorkaround}" />
                        <CheckBox FontSize="16" Content="Enable Windows-1252 workaround when writing the .csf file." IsChecked="{Binding Encoding1252WriteWorkaround}" />
                    </ui:SimpleStackPanel>
                </GroupBox>
            </ui:SimpleStackPanel>
        </TabItem>
        <TabItem Header="Format Converter" x:Name="UI_FormatConverterTabItem">
            <ui:TabItemHelper.Icon>
                <ui:SymbolIcon Symbol="Edit" />
            </ui:TabItemHelper.Icon>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <ui:SimpleStackPanel Grid.Row="0" Spacing="12" Margin="10">
                    <TextBlock TextWrapping="Wrap">The string table of Red Alert 2 is presented as a .csf file, which is not friendly for editing as most csf editors were created decades ago. This tool allows users to convert the string table from a .csf file to an .ini file and back to a .csf file that is recognized by the game.</TextBlock>
                    <TextBlock TextWrapping="Wrap">Note: the text encoding of the .ini file must be UTF-8 (without BOM).</TextBlock>
                    <ui:SimpleStackPanel Spacing="12" Margin="0" Orientation="Horizontal">
                        <Button Content="Load a string table file (.csf/.ini) ..." Click="Convert_LoadFile_Click" Visibility="{Binding Converter={StaticResource Not_BoolToVisConverter}, Path=AdvancedMode}" />
                        <Button Content="Load a string table file (.csf/.ini/.yaml) ..." Click="Convert_LoadFile_Click" Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}" />
                        <!--<Label                     Content="{Binding Convert_FileLabelNum}"                       ContentStringFormat="This string table contains {0} labels."/>-->
                        <Button Content="Save as an .ini file ..." Click="Convert_SaveAsIni_Click" />
                        <Button Content="Save as a .yaml file ..." Click="Convert_SaveAsYaml_Click"  Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}" />
                        <Button Content="Save as a .csf file ..." Click="Convert_SaveAsCsf_Click" />
                    </ui:SimpleStackPanel>
                    <TextBlock TextWrapping="Wrap">
                        The content of the string table file is shown below for preview. To modify it, save it as an .ini file.
                    </TextBlock>

                </ui:SimpleStackPanel>

                <TextBox Margin="10,0,10,0" Grid.Row="1" AcceptsReturn="True" TextWrapping="Wrap" VerticalAlignment="Stretch" IsReadOnly="True" VerticalScrollBarVisibility="Visible" Text="{Binding Convert_CsfFile_Content, Mode=OneWay}" />
                <TextBlock Margin="10" Grid.Row="2" TextWrapping="Wrap" Text="{Binding Convert_CsfFile_Tips, Mode=OneWay}" />
            </Grid>
        </TabItem>
        <TabItem Header="Translation Helper - New" Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}">
            <ui:TabItemHelper.Icon>
                <ui:SymbolIcon Symbol="Comment" />
            </ui:TabItemHelper.Icon>
            <ui:SimpleStackPanel Spacing="12" Margin="10">
                <TextBlock TextWrapping="Wrap">Select an upstream string table file, and save an .ini file that is friendly for translation. The .ini file can be converted back to .csf file in the "Format Converter" tab.</TextBlock>
                <TextBox ui:ControlHelper.Header="Note: in the generated .ini file, all values that needs translation are replaced with the following text:" Text="{Binding TranslationNeededPlaceholder, Mode=OneWay}" IsReadOnly="True" />
                <Button Content="Load an upstream string table file (.csf/.ini) ..." Click="TranslationNew_LoadFile_Click" />
                <Button Content="Save as an .ini file for translation ..." Click="TranslationNew_SaveIniFile_Click" />
            </ui:SimpleStackPanel>
        </TabItem>
        <TabItem Header="Translation Helper - Tile" Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}">
            <ui:TabItemHelper.Icon>
                <ui:SymbolIcon Symbol="Comment" />
            </ui:TabItemHelper.Icon>
            <ui:SimpleStackPanel Spacing="12" Margin="10">
                <TextBlock TextWrapping="Wrap">Select an upstream string table file and a translated string label file, and save an .ini file that is convenient for comparing and checking. The .ini file can be converted back to .csf file in the "Format Converter" tab.</TextBlock>
                <TextBox ui:ControlHelper.Header="Note: in the generated .ini file, all values that needs translation are replaced with the following text:" Text="{Binding TranslationNeededPlaceholder, Mode=OneWay}" IsReadOnly="True" />
                <Button Content="Load an upstream string table file (.csf/.ini) ..." Click="TranslationTile_LoadUpstreamFile_Click" />
                <Button Content="Load a translated string table file (.csf/.ini) ..." Click="TranslationTile_LoadTranslatedFile_Click" />
                <Button Content="Save as an .ini file for comparison ..." Click="TranslationTile_SaveIniFile_Click" />
            </ui:SimpleStackPanel>
        </TabItem>
        <TabItem Header="Translation Helper - Override" Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}">
            <ui:TabItemHelper.Icon>
                <ui:SymbolIcon Symbol="Comment" />
            </ui:TabItemHelper.Icon>

            <ui:SimpleStackPanel Spacing="12" Margin="10">
                <TextBlock TextWrapping="Wrap">Select an upstream string table file and a translated string label file, and save an .ini file that once a label is shown in the translated file, the value is selected. Otherwise, the label shown in the upstream file is selected. The .ini file can be converted back to .csf file in the "Format Converter" tab.</TextBlock>

                <Button Content="Load an upstream string table file (.csf/.ini) ..." Click="TranslationOverride_LoadUpstreamFile_Click" />
                <Button Content="Load a translated string table file (.csf/.ini) ..." Click="TranslationOverride_LoadTranslatedFile_Click" />
                <Button Content="Save as an .ini file for comparison ..." Click="TranslationOverride_SaveIniFile_Click" />
            </ui:SimpleStackPanel>
        </TabItem>
        <TabItem Header="Translation Helper - Update" Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}">
            <ui:TabItemHelper.Icon>
                <ui:SymbolIcon Symbol="Comment" />
            </ui:TabItemHelper.Icon>
            <ui:SimpleStackPanel Spacing="12" Margin="10">
                <TextBlock TextWrapping="Wrap">Select an old-version upstream string table file, a new-version upstream string table file and an old-version translated string label file, and save an .ini file that is convenient for updating the translation. The .ini file can be converted back to .csf file in the "Format Converter" tab.</TextBlock>
                <TextBox ui:ControlHelper.Header="Note: in the generated .ini file, all values that needs translation are replaced with the following text:" Text="{Binding TranslationNeededPlaceholder, Mode=OneWay}" IsReadOnly="True" />
                <Button Content="Load an old-version upstream string table file (.csf/.ini) ..." Click="TranslationUpdate_LoadOldUpstreamFile_Click" />
                <Button Content="Load a new-version upstream string table file (.csf/.ini) ..." Click="TranslationUpdate_LoadNewUpstreamFile_Click" />
                <Button Content="Load an old-version translated string table file (.csf/.ini) ..." Click="TranslationUpdate_LoadOldTranslatedFile_Click" />
                <Button Content="Save as an .ini file for updating the translation ..." Click="TranslationUpdate_SaveIniFile_Click" />
            </ui:SimpleStackPanel>
        </TabItem>
        <TabItem Header="Translation Helper - Update Check" Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}">
            <ui:TabItemHelper.Icon>
                <ui:SymbolIcon Symbol="Comment" />
            </ui:TabItemHelper.Icon>
            <ui:SimpleStackPanel Spacing="12" Margin="10">
                <TextBlock TextWrapping="Wrap">Select an old-version upstream string table file, a new-version upstream string table file, an old-version translated string label file, and a new-version translated string label file, and save an .ini file that is checked for whether some labels remain the old version. The .ini file can be converted back to .csf file in the "Format Converter" tab.</TextBlock>
                <TextBox ui:ControlHelper.Header="Note: in the generated .ini file, all values that needs translation are replaced with the following text:" Text="{Binding TranslationNeededPlaceholder, Mode=OneWay}" IsReadOnly="True" />
                <TextBox Text="{Binding TranslationDeleteNeededPlaceholder, Mode=OneWay}" IsReadOnly="True" />
                <Button Content="Load an old-version upstream string table file (.csf/.ini) ..." Click="TranslationUpdateCheck_LoadOldUpstreamFile_Click" />
                <Button Content="Load a new-version upstream string table file (.csf/.ini) ..." Click="TranslationUpdateCheck_LoadNewUpstreamFile_Click" />
                <Button Content="Load an old-version translated string table file (.csf/.ini) ..." Click="TranslationUpdateCheck_LoadOldTranslatedFile_Click" />
                <Button Content="Load a new-version translated string table file (.csf/.ini) ..." Click="TranslationUpdateCheck_LoadNewTranslatedFile_Click" />
                <Button Content="Save as an .ini file for updating the translation ..." Click="TranslationUpdateCheck_SaveIniFile_Click" />
            </ui:SimpleStackPanel>
        </TabItem>
        <TabItem Header="Watch Mode" Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=AdvancedMode}">
            <ui:TabItemHelper.Icon>
                <ui:SymbolIcon Symbol="Manage" />
            </ui:TabItemHelper.Icon>
            <ui:SimpleStackPanel Spacing="12" Margin="10">
                <TextBlock TextWrapping="Wrap">In the text box below, input the pairs of .ini files to monitor and the corresponding .csf files to generate. Separate each pair with a comma. You can enter multiple pairs by putting each pair on a new line. Once the program starts, it will monitor the .ini files. Whenever an ini file changes, the program will automatically generate the corresponding csf file.</TextBlock>
                <TextBlock>Example: C:\path\to\stringtables\ra2.ini, D:\path\to\game\ra2.csf</TextBlock>
                <TextBox AcceptsReturn="True" IsReadOnly="False" Height="200" Text="{Binding WatchConfigStr, Mode=TwoWay}" >
                </TextBox>
                <Button Content="Save and Apply" Click="WatchMode_Confirm_Click"/>
            </ui:SimpleStackPanel>
        </TabItem>
    </TabControl>
</Window>